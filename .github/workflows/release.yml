name: Release
on:
  push:
    tags:
      - '**'

concurrency:
  group: ci-release-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ (matrix.arch == 'arm64' && 'ubuntu-22.04-arm') || 'ubuntu-22.04' }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, arm64 ]
    container: golang:1.23-bullseye
    steps:
      # libbtrfs-dev is needed by containerd go package - build time dep, no runtime.
      # Vcpkg also needs ninja since on arm64 VCPKG_FORCE_SYSTEM_BINARIES must be enabled.
      - name: Install plugin deps
        run: apt-get update && apt-get install -y --no-install-recommends git make build-essential autotools-dev automake libtool pkg-config libbtrfs-dev curl zip unzip tar ninja-build

      - name: Install updated cmake version ⛓️
        run: |
          curl -L -o /tmp/cmake.tar.gz https://github.com/Kitware/CMake/releases/download/v3.31.4/cmake-3.31.4-linux-$(uname -m).tar.gz
          gzip -d /tmp/cmake.tar.gz
          tar -xpf /tmp/cmake.tar --directory=/tmp
          cp -R /tmp/cmake-3.31.4-linux-$(uname -m)/* /usr
          rm -rf /tmp/cmake-3.31.4-linux-$(uname -m)

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Safe directory
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Build plugin library
        env:
          VCPKG_FORCE_SYSTEM_BINARIES: 'true'
        run: make libcontainer.so

      - name: Upload artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: libcontainer-${{ matrix.arch }}
          path: 'libcontainer.so'

  build-others:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Build plugin library (without ASYNC capability)
        run: make

      - name: Upload artifact - windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: libcontainer-win
          path: 'container.dll'

      - name: Upload artifact - osx
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: libcontainer-osx
          path: 'libcontainer.dylib'

  release:
    needs: [build, build-others]
    runs-on: 'ubuntu-latest'
    steps:
      - name: Download amd64 plugin
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libcontainer-amd64

      - name: Rename amd64 library
        run: mv libcontainer.so libcontainer_amd64.so

      - name: Download arm64 plugin
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libcontainer-arm64

      - name: Rename arm64 library
        run: mv libcontainer.so libcontainer_arm64.so

      - name: Download osx plugin
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libcontainer-osx

      - name: Rename osx library
        run: mv libcontainer.dylib libcontainer_no_async_cap.dylib

      - name: Download win plugin
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libcontainer-win

      - name: Rename win library
        run: mv container.dll container_no_async_cap.dll

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            libcontainer_amd64.so
            libcontainer_arm64.so
            libcontainer_no_async_cap.dylib
            container_no_async_cap.dll

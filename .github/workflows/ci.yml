name: CI build
on:
  pull_request:
  push:
    branches: [main]

# Checks if any concurrent jobs under the same pull request or branch are being executed
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    uses: ./.github/workflows/reusable_build.yml
    with:
      run-tests: true
    secrets: inherit

  falco-tests:
    needs: [build]
    name: falco-tests-${{ matrix.arch }}
    runs-on: ${{ (matrix.arch == 'arm64' && 'ubuntu-22.04-arm') || 'ubuntu-22.04' }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, arm64 ]
    container:
      image: falcosecurity/falco:master-debian
    steps:
      - name: Download library
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libcontainer-${{ matrix.arch }}
          path: /usr/share/falco/plugins/

      - name: Run falcosecurity/testing Falco tests
        uses: falcosecurity/testing@main
        with:
          test-falco: 'true'
          test-falcoctl: 'false'
          test-k8saudit: 'false'
          test-dummy: 'false'
          static: 'false'
          test-drivers: 'false'
          show-all: 'true'
          sudo: ''

  libs-tests:
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      - name: Install deps ‚õìÔ∏è
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
            ca-certificates \
            cmake \
            build-essential \
            clang-14 llvm-14 \
            git \
            clang \
            llvm \
            pkg-config \
            autoconf \
            automake \
            libtool \
            libelf-dev \
            wget \
            libbpf-dev \
            libcap-dev \
            libtbb-dev \
            libjq-dev \
            libjsoncpp-dev \
            libgtest-dev \
            libprotobuf-dev \
            protobuf-compiler \
            "linux-headers-$(uname -r)"
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-14 90
          sudo update-alternatives --install /usr/bin/llvm-strip llvm-strip /usr/bin/llvm-strip-14 90
          sudo update-alternatives --install /usr/bin/llc llc /usr/bin/llc-14 90

      - name: Checkout libs
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'
          repository: "falcosecurity/libs"

      - name: Install deps
        run: sudo .github/install-deps.sh

      - name: Build e2e tests üèóÔ∏èüß™
        env:
          # This avoids random failures on CI.
          # (https://github.com/google/sanitizers/issues/1322#issuecomment-699946942)
          ASAN_OPTIONS: intercept_tls_get_addr=0
        run: |
          mkdir -p build && cd build
          cmake -DBUILD_BPF=ON \
             -DBUILD_LIBSCAP_MODERN_BPF=ON \
             -DBUILD_LIBSCAP_GVISOR=OFF \
             -DENABLE_E2E_TESTS=ON \
             -DUSE_BUNDLED_DEPS=OFF \
             -DUSE_BUNDLED_LIBBPF=ON \
             ..
          make -j$(nproc) sinsp-example driver bpf container_plugin
          sudo -E make e2e-install-deps

      - name: Download library overriding built library
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libcontainer-amd64
          path: build/test/e2e/container_plugin-prefix/src/container_plugin/

      - name: Run e2e tests
        run: |
          cd build
          sudo -E ../test/e2e/scripts/run_tests.sh

      - name: Archive test reports
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        if: always()
        with:
          name: libs_e2e_report
          path: |
            /tmp/report/

  formatting-check:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run clang-format style check
        uses: jidicula/clang-format-action@d05cecd4a1a5b7e64c22f5a468456135a43f13f6 #v4.14.0
        with:
          clang-format-version: '18'

name: CI build
on:
  pull_request:
  push:
    branches: [main]

# Checks if any concurrent jobs under the same pull request or branch are being executed
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    uses: ./.github/workflows/reusable_build.yml
    with:
      caching_enabled: true
    secrets: inherit

  test:
    # ubuntu24.04 for podman >= 4.x. x86_64 only,
    # since podman is not shipped by beta github arm64 runners:
    # https://github.com/actions/partner-runner-images/blob/main/images/arm-ubuntu-22-image.md#not-installed-software
    # Building tests fail with: "faccessat /home/runneradmin/.config/containers/storage.conf: permission denied"
    runs-on: 'ubuntu-24.04'
    steps:
      # Needed by podman package - build and runtime dep.
      - name: Install go test deps
        run: sudo apt-get install -y --no-install-recommends libbtrfs-dev libgpgme-dev

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go-worker/go.mod
          cache-dependency-path: go-worker/go.sum

      - name: Build go-worker executable
        run: make -C go-worker exe

      - name: Run tests
        run: |
          systemctl --user start podman
          make test

  falco-tests:
    needs: [build]
    name: falco-tests-${{ matrix.arch }}
    runs-on: ${{ (matrix.arch == 'arm64' && 'ubuntu-22.04-arm') || 'ubuntu-22.04' }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, arm64 ]
    container:
      image: falcosecurity/falco:master-debian
    steps:
      - name: Download library
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libcontainer-${{ matrix.arch }}
          path: /usr/share/falco/plugins/

      - name: Run falcosecurity/testing Falco tests
        uses: falcosecurity/testing@main
        with:
          test-falco: 'true'
          test-falcoctl: 'false'
          test-k8saudit: 'false'
          test-dummy: 'false'
          static: 'false'
          test-drivers: 'false'
          show-all: 'true'
          sudo: ''

  formatting-check:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run clang-format style check
        uses: jidicula/clang-format-action@d05cecd4a1a5b7e64c22f5a468456135a43f13f6 #v4.14.0
        with:
          clang-format-version: '18'